apiVersion: v1
kind: ServiceAccount
metadata:
  name: portworx-operator
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: portworx-operator
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["px-operator"]
    verbs: ["use"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: portworx-operator
subjects:
- kind: ServiceAccount
  name: portworx-operator
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: portworx-operator
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: px-essential
  namespace: kube-system
data:
  px-essen-user-id: XXXX
  px-osb-endpoint: XXXX

---

# PostgreSQL StatefulSet ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-db-config
  namespace: dockers
  labels:
    k8s-app: postgres-db-config
    namespace: dockers
data:
  POSTGRES_DB: XXX
  POSTGRES_USER: XXX
  POSTGRES_PASSWORD: XXX
  PGDATA: /data/pgdata

kind: Deployment
apiVersion: apps/v1
metadata:
  name: xxx
  namespace: dockers
  labels:
    k8s-app: xxx
    project: xxx
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: xxx
  template:
    metadata:
      name: xxx
      labels:
        k8s-app: xx
    spec:
      containers:
      - name: postgresql-db
        image: postgres:15-alpine
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: postgres-db-config
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /var/lib/postgresql
          name: psql-vol
      - name: xxx
        image: xxx.xxx.xxx.xxx:xxxx/xxx:xxx
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: xxx-config
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development" 
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 8.8.8.8
      volumes:
      - name: psql-vol
        hostPath:
          path: /virt/var/lib/postgresql
      - name: data
        hostPath:
          path: /virt/data


---   

kind: Service
apiVersion: v1
metadata:
  name: xxx
  namespace: xxx
  labels:
    k8s-app: xxx
    project: xxx
spec:
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: xxxxx
  selector:
    k8s-app: xxx
